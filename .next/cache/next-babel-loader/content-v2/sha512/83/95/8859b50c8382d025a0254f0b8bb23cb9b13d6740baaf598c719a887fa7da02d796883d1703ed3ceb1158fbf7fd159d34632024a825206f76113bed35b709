{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jieunchun/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport React, { Fragment } from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport Head from 'next/head';\n\nfunction MeetupDetails(props) {\n  console.log(props.meetupData.title);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      id: props.meetupData.id,\n      title: props.meetupData.title,\n      image: props.meetupData.image,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://janechun22:janechun22@cluster0.jrwnfs4.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://janechun22:janechun22@cluster0.jrwnfs4.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const selectedMeetup = await meetupCollection.findOne({\n    _id: new ObjectId(meetupId)\n  });\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/jieunchun/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["React","Fragment","MeetupDetail","MongoClient","ObjectId","Head","MeetupDetails","props","console","log","meetupData","title","description","id","image","address","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAN,CAAiBC,KAA7B;AACA,sBACC,QAAC,QAAD;AAAA,4BACC,QAAC,IAAD;AAAA,8BACC;AAAA,kBAAQJ,KAAK,CAACG,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEJ,KAAK,CAACG,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAKC,QAAC,YAAD;AACC,MAAA,EAAE,EAAEL,KAAK,CAACG,UAAN,CAAiBG,EADtB;AAEC,MAAA,KAAK,EAAEN,KAAK,CAACG,UAAN,CAAiBC,KAFzB;AAGC,MAAA,KAAK,EAAEJ,KAAK,CAACG,UAAN,CAAiBI,KAHzB;AAIC,MAAA,OAAO,EAAEP,KAAK,CAACG,UAAN,CAAiBK,OAJ3B;AAKC,MAAA,WAAW,EAAER,KAAK,CAACG,UAAN,CAAiBE;AAL/B;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAeA;;AAED,OAAO,eAAeI,cAAf,GAAgC;AACtC,QAAMC,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CAAoB,+FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACNC,IAAAA,QAAQ,EAAE,KADJ;AAENC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC/BC,MAAAA,MAAM,EAAE;AACPC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADH;AADuB,KAAb,CAAZ;AAFD,GAAP;AAQA;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC7C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CAAoB,+FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMe,cAAc,GAAG,MAAMhB,gBAAgB,CAACiB,OAAjB,CAAyB;AAAEb,IAAAA,GAAG,EAAE,IAAIpB,QAAJ,CAAa4B,QAAb;AAAP,GAAzB,CAA7B;AAEA,SAAO;AACNzB,IAAAA,KAAK,EAAE;AACNG,MAAAA,UAAU,EAAE;AACXG,QAAAA,EAAE,EAAEuB,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADO;AAEXtB,QAAAA,KAAK,EAAEyB,cAAc,CAACzB,KAFX;AAGXG,QAAAA,KAAK,EAAEsB,cAAc,CAACtB,KAHX;AAIXF,QAAAA,WAAW,EAAEwB,cAAc,CAACxB;AAJjB;AADN;AADD,GAAP;AAUA;AAED,eAAeN,aAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport Head from 'next/head';\n\nfunction MeetupDetails(props) {\n\tconsole.log(props.meetupData.title);\n\treturn (\n\t\t<Fragment>\n\t\t\t<Head>\n\t\t\t\t<title>{props.meetupData.title}</title>\n\t\t\t\t<meta name='description' content={props.meetupData.description}></meta>\n\t\t\t</Head>\n\t\t\t<MeetupDetail\n\t\t\t\tid={props.meetupData.id}\n\t\t\t\ttitle={props.meetupData.title}\n\t\t\t\timage={props.meetupData.image}\n\t\t\t\taddress={props.meetupData.address}\n\t\t\t\tdescription={props.meetupData.description}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n}\n\nexport async function getStaticPaths() {\n\tconst client = await MongoClient.connect('mongodb+srv://janechun22:janechun22@cluster0.jrwnfs4.mongodb.net/?retryWrites=true&w=majority');\n\tconst db = client.db();\n\n\tconst meetupCollection = db.collection('meetups');\n\n\tconst meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\n\n\tclient.close();\n\n\treturn {\n\t\tfallback: false,\n\t\tpaths: meetups.map((meetup) => ({\n\t\t\tparams: {\n\t\t\t\tmeetupId: meetup._id.toString(),\n\t\t\t},\n\t\t})),\n\t};\n}\n\nexport async function getStaticProps(context) {\n\tconst meetupId = context.params.meetupId;\n\n\tconst client = await MongoClient.connect('mongodb+srv://janechun22:janechun22@cluster0.jrwnfs4.mongodb.net/?retryWrites=true&w=majority');\n\tconst db = client.db();\n\n\tconst meetupCollection = db.collection('meetups');\n\n\tconst selectedMeetup = await meetupCollection.findOne({ _id: new ObjectId(meetupId) });\n\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: {\n\t\t\t\tid: selectedMeetup._id.toString(),\n\t\t\t\ttitle: selectedMeetup.title,\n\t\t\t\timage: selectedMeetup.image,\n\t\t\t\tdescription: selectedMeetup.description,\n\t\t\t},\n\t\t},\n\t};\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}