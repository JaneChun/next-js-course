{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jieunchun/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient } from 'mongodb';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    id: props.meetupData.id,\n    title: props.meetupData.title,\n    image: props.meetupData.image,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://janechun22:janechun22@cluster0.jrwnfs4.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        title: 'A First MeetUp',\n        image: 'https://imageio.forbes.com/specials-images/dam/imageserve/1170705808/960x0.jpg?height=474&width=711&fit=bounds',\n        address: 'Some address 5, 12345 Some City',\n        description: 'This is a first meetup!'\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/jieunchun/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","MongoClient","MeetupDetails","props","meetupData","id","title","image","address","description","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC7B,sBACC,QAAC,YAAD;AACC,IAAA,EAAE,EAAEA,KAAK,CAACC,UAAN,CAAiBC,EADtB;AAEC,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFzB;AAGC,IAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAHzB;AAIC,IAAA,OAAO,EAAEJ,KAAK,CAACC,UAAN,CAAiBI,OAJ3B;AAKC,IAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBK;AAL/B;AAAA;AAAA;AAAA;AAAA,UADD;AASA;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACtC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAAoB,+FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMC,OAAO,GAAGF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAhB;AAEA,SAAO;AACNC,IAAAA,QAAQ,EAAE,KADJ;AAENC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC/BC,MAAAA,MAAM,EAAE;AACPC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AADH;AADuB,KAAb,CAAZ;AAFD,GAAP;AAQA;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC7C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,SAAO;AACNtB,IAAAA,KAAK,EAAE;AACNC,MAAAA,UAAU,EAAE;AACXC,QAAAA,EAAE,EAAEoB,QADO;AAEXnB,QAAAA,KAAK,EAAE,gBAFI;AAGXC,QAAAA,KAAK,EAAE,gHAHI;AAIXC,QAAAA,OAAO,EAAE,iCAJE;AAKXC,QAAAA,WAAW,EAAE;AALF;AADN;AADD,GAAP;AAWA;AAED,eAAeP,aAAf","sourcesContent":["import React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient } from 'mongodb';\n\nfunction MeetupDetails(props) {\n\treturn (\n\t\t<MeetupDetail\n\t\t\tid={props.meetupData.id}\n\t\t\ttitle={props.meetupData.title}\n\t\t\timage={props.meetupData.image}\n\t\t\taddress={props.meetupData.address}\n\t\t\tdescription={props.meetupData.description}\n\t\t/>\n\t);\n}\n\nexport async function getStaticPaths() {\n\tconst client = await MongoClient.connect('mongodb+srv://janechun22:janechun22@cluster0.jrwnfs4.mongodb.net/?retryWrites=true&w=majority');\n\tconst db = client.db();\n\n\tconst meetupCollection = db.collection('meetups');\n\n\tconst meetups = meetupCollection.find({}, { _id: 1 }).toArray();\n\n\treturn {\n\t\tfallback: false,\n\t\tpaths: meetups.map((meetup) => ({\n\t\t\tparams: {\n\t\t\t\tmeetupId: meetup._id.toString(),\n\t\t\t},\n\t\t})),\n\t};\n}\n\nexport async function getStaticProps(context) {\n\tconst meetupId = context.params.meetupId;\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: {\n\t\t\t\tid: meetupId,\n\t\t\t\ttitle: 'A First MeetUp',\n\t\t\t\timage: 'https://imageio.forbes.com/specials-images/dam/imageserve/1170705808/960x0.jpg?height=474&width=711&fit=bounds',\n\t\t\t\taddress: 'Some address 5, 12345 Some City',\n\t\t\t\tdescription: 'This is a first meetup!',\n\t\t\t},\n\t\t},\n\t};\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}